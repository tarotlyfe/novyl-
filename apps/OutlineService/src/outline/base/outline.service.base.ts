/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Outline as PrismaOutline } from "@prisma/client";

export class OutlineServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.OutlineCountArgs, "select">): Promise<number> {
    return this.prisma.outline.count(args);
  }

  async outlines<T extends Prisma.OutlineFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.OutlineFindManyArgs>
  ): Promise<PrismaOutline[]> {
    return this.prisma.outline.findMany<Prisma.OutlineFindManyArgs>(args);
  }
  async outline<T extends Prisma.OutlineFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.OutlineFindUniqueArgs>
  ): Promise<PrismaOutline | null> {
    return this.prisma.outline.findUnique(args);
  }
  async createOutline<T extends Prisma.OutlineCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.OutlineCreateArgs>
  ): Promise<PrismaOutline> {
    return this.prisma.outline.create<T>(args);
  }
  async updateOutline<T extends Prisma.OutlineUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.OutlineUpdateArgs>
  ): Promise<PrismaOutline> {
    return this.prisma.outline.update<T>(args);
  }
  async deleteOutline<T extends Prisma.OutlineDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.OutlineDeleteArgs>
  ): Promise<PrismaOutline> {
    return this.prisma.outline.delete(args);
  }
}
